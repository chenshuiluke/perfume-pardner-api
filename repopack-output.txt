This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-09-07T19:49:06.451Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.gitignore
appsettings.Development.json
appsettings.json
docker-compose.yml
Dockerfile
perfume-pardner-api.csproj
perfume-pardner-api.http
perfume-pardner-api.sln
Program.cs
Properties/launchSettings.json
src/PerfumePardner.API/Controllers/FragranceController.cs
src/PerfumePardner.Core/Class1.cs
src/PerfumePardner.Core/Entities/Fragrance.cs
src/PerfumePardner.Core/PerfumePardner.Core.csproj
src/PerfumePardner.Infrastructure/Class1.cs
src/PerfumePardner.Infrastructure/PerfumePardner.Infrastructure.csproj

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# Created by https://www.toptal.com/developers/gitignore/api/dotnetcore,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=dotnetcore,visualstudiocode

### DotnetCore ###
# .NET Core build folders
bin/
obj/

# Common node modules locations
/node_modules
/wwwroot/node_modules

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# End of https://www.toptal.com/developers/gitignore/api/dotnetcore,visualstudiocode

================
File: appsettings.Development.json
================
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  }
}

================
File: appsettings.json
================
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}

================
File: docker-compose.yml
================
version: '3.8'

services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Database=myapp;Username=myuser;Password=mypassword
      - DOTNET_USE_POLLING_FILE_WATCHER=1  # Enable polling watcher for Docker on Windows
    volumes:
      - .:/app
      - /app/bin
      - /app/obj

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:

================
File: Dockerfile
================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS base
WORKDIR /app
EXPOSE 8080

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["perfume-pardner-api.csproj", "./"]
RUN dotnet restore "./perfume-pardner-api.csproj"
COPY . .
WORKDIR "/src/."

FROM build AS publish
RUN dotnet publish "perfume-pardner-api.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "watch", "run", "--project", "perfume-pardner-api.csproj", "--urls", "http://+:8080"]

================
File: perfume-pardner-api.csproj
================
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>perfume_pardner_api</RootNamespace>
  <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.JSON" Version="13.0.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
  </ItemGroup>

</Project>

================
File: perfume-pardner-api.http
================
@perfume_pardner_api_HostAddress = http://localhost:5297

GET {{perfume_pardner_api_HostAddress}}/weatherforecast/
Accept: application/json

###

================
File: perfume-pardner-api.sln
================
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.5.002.0
MinimumVisualStudioVersion = 10.0.40219.1
Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "perfume-pardner-api", "perfume-pardner-api.csproj", "{8DD0DEB9-6B80-4A8D-A27C-BEF626AB691F}"
EndProject
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "src", "src", "{83D46B0A-FBEB-4889-B47F-DB5AF0B8617D}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "PerfumePardner.Core", "src\PerfumePardner.Core\PerfumePardner.Core.csproj", "{DB5EE67A-9574-475D-895E-D769DB5FFA75}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "PerfumePardner.Infrastructure", "src\PerfumePardner.Infrastructure\PerfumePardner.Infrastructure.csproj", "{4E62551D-EF2F-4328-954A-0021C64F4362}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{8DD0DEB9-6B80-4A8D-A27C-BEF626AB691F}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{8DD0DEB9-6B80-4A8D-A27C-BEF626AB691F}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{8DD0DEB9-6B80-4A8D-A27C-BEF626AB691F}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{8DD0DEB9-6B80-4A8D-A27C-BEF626AB691F}.Release|Any CPU.Build.0 = Release|Any CPU
		{DB5EE67A-9574-475D-895E-D769DB5FFA75}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{DB5EE67A-9574-475D-895E-D769DB5FFA75}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{DB5EE67A-9574-475D-895E-D769DB5FFA75}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{DB5EE67A-9574-475D-895E-D769DB5FFA75}.Release|Any CPU.Build.0 = Release|Any CPU
		{4E62551D-EF2F-4328-954A-0021C64F4362}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{4E62551D-EF2F-4328-954A-0021C64F4362}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{4E62551D-EF2F-4328-954A-0021C64F4362}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{4E62551D-EF2F-4328-954A-0021C64F4362}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D9B6D728-714E-4EF5-8160-DB32218AED41}
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{DB5EE67A-9574-475D-895E-D769DB5FFA75} = {83D46B0A-FBEB-4889-B47F-DB5AF0B8617D}
		{4E62551D-EF2F-4328-954A-0021C64F4362} = {83D46B0A-FBEB-4889-B47F-DB5AF0B8617D}
	EndGlobalSection
EndGlobal

================
File: Program.cs
================
var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();

================
File: Properties/launchSettings.json
================
{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:27377",
      "sslPort": 44357
    }
  },
  "profiles": {
    "http": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "http://localhost:5297",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "https": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "https://localhost:7150;http://localhost:5297",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "swagger",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

================
File: src/PerfumePardner.API/Controllers/FragranceController.cs
================
using Microsoft.AspNetCore.Mvc;

namespace perfume_pardner_api.Controllers;

[ApiController]
[Route("[controller]")]
public class FragranceController : ControllerBase
{
    private static readonly string[] Summaries = new[]
    {
        "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"
    };

    private readonly ILogger<FragranceController> _logger;

    public FragranceController(ILogger<FragranceController> logger)
    {
        _logger = logger;
    }

    [HttpGet(Name = "GetAllFragrances")]
    public IEnumerable<Fragrance> Get()
    {
        return Enumerable.Range(1, 5).Select(index => new Fragrance("Aventus", "Creed", 123, ".", new Dictionary<string, List<string>>() {

        }, "1234" ))
        .ToArray();
    }
}

================
File: src/PerfumePardner.Core/Class1.cs
================
namespace PerfumePardner.Core;

public class Class1
{

}

================
File: src/PerfumePardner.Core/Entities/Fragrance.cs
================
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
namespace perfume_pardner_api;

public class Fragrance
{
    [JsonProperty("title")]
    public string Title { get; set; }

    [JsonProperty("designer")]
    public string Designer { get; set; }

    [JsonProperty("year")]
    public int Year { get; set; }

    [JsonProperty("thumbnail")]
    public string Thumbnail { get; set; }

    [JsonProperty("url")]
    public Dictionary<string, List<string>> Url { get; set; }

    [JsonProperty("objectID")]
    public string ObjectId { get; set; }

    public Fragrance(string naslov, string dizajner, int godina, string thumbnail, Dictionary<string, List<string>> url, string objectID)
    {
        Title = naslov;
        Designer = dizajner;
        Year = godina;
        Thumbnail = thumbnail;
        Url = url;
        ObjectId = objectID;
    }
}

================
File: src/PerfumePardner.Core/PerfumePardner.Core.csproj
================
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Newtonsoft.JSON" Version="13.0.3" />
  </ItemGroup>
</Project>

================
File: src/PerfumePardner.Infrastructure/Class1.cs
================
namespace PerfumePardner.Infrastructure;

public class Class1
{

}

================
File: src/PerfumePardner.Infrastructure/PerfumePardner.Infrastructure.csproj
================
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

</Project>
